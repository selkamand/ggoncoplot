% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oncoplot.R
\name{ggoncoplot}
\alias{ggoncoplot}
\title{ggoncoplot}
\usage{
ggoncoplot(
  .data,
  col_genes,
  col_samples,
  col_mutation_type = NULL,
  genes_to_include = NULL,
  genes_to_ignore = NULL,
  col_tooltip = col_samples,
  topn = 10,
  return_extra_genes_if_tied = FALSE,
  draw_gene_barplot = FALSE,
  draw_tmb_barplot = FALSE,
  copy = c("sample", "gene", "tooltip", "mutation_type", "nothing"),
  palette = NULL,
  metadata = NULL,
  metadata_palette = NULL,
  col_samples_metadata = col_samples,
  cols_to_plot_metadata = NULL,
  metadata_require_mutations = TRUE,
  pathway = NULL,
  col_genes_pathway = col_genes,
  show_all_samples = FALSE,
  interactive = TRUE,
  options = ggoncoplot_options(),
  verbose = TRUE,
  ...
)
}
\arguments{
\item{.data}{data for oncoplot. A data.frame with 1 row per mutation in your cohort. Must contain columns describing gene_symbols and sample_identifiers (data.frame)}

\item{col_genes}{name of \strong{data} column containing gene names/symbols (string)}

\item{col_samples}{name of \strong{data} column containing sample identifiers (string)}

\item{col_mutation_type}{name of \strong{data} column describing mutation types (string, optional)}

\item{genes_to_include}{specific genes to include in the oncoplot (character, optional)}

\item{genes_to_ignore}{names of the genes that should be ignored (character, optional)}

\item{col_tooltip}{name of \strong{data} column containing whatever information you want to display in (string, defaults to col_samples)}

\item{topn}{how many of the top genes to visualize. Ignored if \code{genes_to_include} is supplied (number, default 10)}

\item{return_extra_genes_if_tied}{instead of strictly returning \code{topn} genes,
in the case of ties (where multiple genes are mutated in the exact same number of samples, complicating selection of top n genes), return all tied genes (potentially more than topn).
If FALSE, will return strictly \code{topn} genes, breaking ties based on order of appearance in dataset (flag, default FALSE)}

\item{draw_gene_barplot}{add a barplot describing number of samples with each gene mutated (right side) (flag, default FALSE)}

\item{draw_tmb_barplot}{add a barplot describing total number of mutations in each sample (above main plot). If a single gene is mutated multiple times, all mutations are counted towards total (flag, default FALSE)}

\item{copy}{value to copy to clipboard when an oncoplot tile is clicked (string, one of 'sample', 'gene', 'tooltip', 'mutation_type', 'nothing', default 'sample')}

\item{palette}{a named vector mapping all possible mutation types (vector names) to colors (vector values, optional)}

\item{metadata}{dataframe describing sample level metadata.
One column must contain unique sample identifiers. Other columns can describe numeric / categorical metadata (data.frame, optional)}

\item{metadata_palette}{A list of named vectors. List names correspond to metadata column names (categorical only). Vector names to levels of columns. Vector values are colors, the vector names are used to map values in .data to a color. (optional)}

\item{col_samples_metadata}{which column in metadata data.frame describes sample identifiers (string, defaults to col_samples)}

\item{cols_to_plot_metadata}{names of columns in metadata that should be plotted (character, optional)}

\item{metadata_require_mutations}{filter out samples from metadata lacking any mutations in .data (flag, default TRUE)}

\item{pathway}{a two column dataframe describing pathway. The column containing gene names should have the same name as \strong{col_gene} (data.frame, optional)}

\item{col_genes_pathway}{which column in pathway data.frame describes gene names (string, defaults to col_genes)}

\item{show_all_samples}{show all samples in oncoplot, even if they don't have mutations in the selected genes. Samples only described in metadata but with no mutations at all are still filtered out by default, but you can show these too by setting \code{metadata_require_mutations = FALSE} (flag, default FALSE)}

\item{interactive}{should plot be interactive (boolean, default TRUE)}

\item{options}{a list of additional visual parameters created by calling \code{\link[=ggoncoplot_options]{ggoncoplot_options()}}. See \code{\link{ggoncoplot_options}} for details.}

\item{verbose}{verbose mode (flag, default TRUE)}

\item{...}{
  Arguments passed on to \code{\link[gg1d:gg1d_plot]{gg1d::gg1d_plot}}
  \describe{
    \item{\code{col_id}}{name of column to use for}
    \item{\code{col_sort}}{column to sort sample order by. By default uses the supplied order of levels in col_id (order of appearance if a character type)}
    \item{\code{maxlevels}}{for categorical variables, what is the maximum number of distinct values to allow (too many will make it hard to find a palette that suits). (number)}
    \item{\code{drop_unused_id_levels}}{if col_id is a factor with unused levels, should these be dropped or included in visualisation}
    \item{\code{debug_return_col_info}}{return column info instead of plots. Helpful when debugging (logical)}
    \item{\code{palettes}}{A list of named vectors. List names correspond to .data column names (categorical only). Vector names to levels of columns. Vector values are colours, the vector names are used to map values in .data to a colour.}
    \item{\code{colours_default}}{default colours to use for variables. will be used to colour variables with no palette supplied.}
    \item{\code{colours_default_logical}}{colours for binary variables (vector of 3 colors where elements represent colours of TRUE, FALSE, and NA respectively) (character)}
    \item{\code{colours_missing}}{colour to use for values of NA (string)}
    \item{\code{limit_plots}}{throw an error when there are > 15 plottable columns in table (logical)}
    \item{\code{cols_to_plot}}{names of columns in \code{.data} that should be plotted. By default plots all valid columns (character)}
    \item{\code{sort_type}}{controls how categorical variables are sorted.
Numerical variables are always sorted in numerical order irrespective of the value given here.
Options are \code{alphabetical} or \code{frequency}}
    \item{\code{desc}}{sort in descending order (flag)}
    \item{\code{width}}{controls how much space is present between bars and tiles within each plot. Can be 0-1 where values of 1 makes bars/tiles take up 100\% of available space (no gaps between bars)}
    \item{\code{relative_height_numeric}}{how many times taller should numeric plots be relative to categorical tile plots. Only taken into account if numeric_plot_type == "bar" (number)}
    \item{\code{tooltip_column_suffix}}{the suffix added to a column name that indicates column should be used as a tooltip (string)}
    \item{\code{ignore_column_regex}}{a regex string that, if matches a column name,  will cause that  column to be exclude from plotting (string)  (default: "_ignore$")}
    \item{\code{show_legend_titles}}{show legend titles (flag)}
    \item{\code{show_legend}}{show the legend (flag)}
    \item{\code{legend_position}}{position of the legend on the plot (string, options are "right", "left", "bottom", "top")}
    \item{\code{legend_title_position}}{position of the title of the legend on the plot (string, options are "top", "bottom", "left", "right")}
    \item{\code{legend_title_beautify}}{beautify legend title (add spaces to snake_case / camelCase & capitalise each word) (flag)}
    \item{\code{numeric_plot_type}}{visual representation of numeric properties. One of 'bar', for bar charts, or 'heatmap' for heatmaps.}
    \item{\code{legend_nrow}}{the number of rows in the legend (number)}
    \item{\code{legend_ncol}}{the number of columns in the legend. Set \code{legend_nrow = NULL} when using legend_ncol (number)}
    \item{\code{legend_title_size}}{the size of the title of the legend (number)}
    \item{\code{legend_text_size}}{the size of the text in the legend (number)}
    \item{\code{legend_key_size}}{the size of the key in the legend (number)}
    \item{\code{vertical_spacing}}{how large should the gap between each data row be (unit = pt) (number)}
    \item{\code{na_marker}}{what text should be added to NA values for numeric variables to indicate the value is NA, not 0 (string)}
    \item{\code{na_marker_size}}{how large should the na_marker be (number)}
    \item{\code{show_na_marker_categorical}}{should a text marker of NA values (e.g. '!') be rendered on tiles with NA values (flag)}
    \item{\code{show_na_marker_heatmap}}{should a text marker of NA values (e.g. '!') be rendered on tiles with NA values (flag)}
    \item{\code{show_values_heatmap}}{should quantitative values be displayed on heatmap tiles (flag)}
    \item{\code{fontsize_y_text}}{size of y axis text (number)}
    \item{\code{y_axis_position}}{whether y axis should be on left or right side (either 'left' or 'right')}
    \item{\code{legend_orientation_heatmap}}{should legend orientation be "horizontal" or "vertical"}
    \item{\code{colours_heatmap_low}}{colour of lowest value in heatmap (string)}
    \item{\code{colours_heatmap_high}}{colour of highest value in heatmap (string)}
    \item{\code{transform_heatmap}}{transformation to apply to values before heatmap visualisation. one of 'identity' (no transformation), 'log10', or 'log2'}
    \item{\code{fontsize_values_heatmap}}{font size of text describing values in heatmap (number)}
    \item{\code{colours_values_heatmap}}{colour of text describing values in heatmap (string)}
    \item{\code{fontsize_barplot_y_numbers}}{fontsize of the text describing numeric barplot max & min values (number)}
  }}
}
\value{
ggplot or girafe object if \code{interactive=TRUE}
}
\description{
ggoncoplot
}
\examples{
# ===== GBM =====
gbm_csv <- system.file(
  package = "ggoncoplot",
  "testdata/GBM_tcgamutations_mc3_maf.csv.gz"
)

gbm_clinical_csv <- system.file(
  package = "ggoncoplot",
  "testdata/GBM_tcgamutations_mc3_clinical.csv"
)

gbm_df <- read.csv(file = gbm_csv, header = TRUE)
gbm_clinical_df <- read.csv(file = gbm_clinical_csv, header = TRUE)

# Plot Basic Oncoplot
ggoncoplot(
  gbm_df,
  "Hugo_Symbol",
  "Tumor_Sample_Barcode",
  col_mutation_type = "Variant_Classification",
  metadata = gbm_clinical_df,
  cols_to_plot_metadata = "gender"
)

# Customise how the Oncoplot looks
ggoncoplot(
  gbm_df,
  "Hugo_Symbol",
  "Tumor_Sample_Barcode",
  col_mutation_type = "Variant_Classification",
  metadata = gbm_clinical_df,
  cols_to_plot_metadata = "gender",

  # Customise Visual Options
  options = ggoncoplot_options(
      xlab_title = "Glioblastoma Samples",
      ylab_title = "Top 10 mutated genes"
  )
)
}
