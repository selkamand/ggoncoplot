% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oncoplot.R
\name{ggoncoplot_plot}
\alias{ggoncoplot_plot}
\title{Plot oncoplot}
\usage{
ggoncoplot_plot(
  .data,
  show_sample_ids = FALSE,
  interactive = TRUE,
  palette = NULL,
  interactive_svg_width = 12,
  interactive_svg_height = 6,
  xlab_title = "Sample",
  ylab_title = "Gene"
)
}
\arguments{
\item{.data}{transformed data from [ggoncoplot_prep_df()] (data.frame)}

\item{show_sample_ids}{show sample_ids_on_x_axis (flag)}

\item{interactive}{should plot be interactive (boolean)}

\item{palette}{a named vector mapping all possible mutation types (vector names) to colours (vector values).
If not supplied ggoncoplot will check if all values are either valid SO or MAF variant classification terms
and use pre-made colour schemes for each of these ontologies from the \strong{mutationtypes} package.
If mutation type terms are not described using these ontologies, a 12 colour RColourBrewer palette will be used, but the user warned to make a custom mapping to force consistent colour schemes between plots (character)}

\item{interactive_svg_width}{dimensions of interactive plot (number)}

\item{interactive_svg_height}{dimensions of interactive plot (number)}

\item{xlab_title}{x axis lable (string)}

\item{ylab_title}{y axis of interactive plot (number)}
}
\value{
ggplot or girafe object if \code{interactive=TRUE}
}
\description{
This function takes the output from \strong{ggoncoplot_prep_df} and plots it.
Should not be exposed since it makes some assumptions about structure of input data.
}
\examples{
# ===== GBM =====
gbm_csv <- system.file(
  package = "ggoncoplot",
  "testdata/GBM_tcgamutations_mc3_maf.csv.gz"
)

gbm_df <- read.csv(file = gbm_csv, header = TRUE)

ggoncoplot(
  gbm_df,
  "Hugo_Symbol",
  "Tumor_Sample_Barcode",
  col_mutation_type = "Variant_Classification"
)

}
