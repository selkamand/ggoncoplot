% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oncoplot.R
\name{check_valid_dataframe_column}
\alias{check_valid_dataframe_column}
\title{data.frame has colnames}
\usage{
check_valid_dataframe_column(data, colnames, error_call = rlang::caller_env())
}
\arguments{
\item{data}{dataframe that you want to assert contain specific columns (data.frame)}

\item{colnames}{Name (character)}

\item{error_call}{error call environment (do not change)}
}
\value{
invisibly returns TRUE. If data is missing columns, will throw error
}
\description{
Assert that data.frame contains a set of user defined column names.
}
\details{
data.frame may have any additional colnames.
It just has to have AT LEAST the columns specified by \code{colnames}

Informs user about the missing columns one at a time. This may change in future
}
\examples{
# Check mtcars has columns 'mpg' and 'cyl'
ggoncoplot:::check_valid_dataframe_column(mtcars, c('mpg', 'cyl'))

}
